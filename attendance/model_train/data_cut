import cv2
import numpy as np
import os

# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#     ディレクトリに格納した写真の顔を認識し顔部分だけを切り抜く
# +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

# カスケード分類器の読み込み（OpenCVが提供）
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
folder_path = "face_images/"
# all_file_paths = [os.path.join(folder_path, f) for f in os.listdir(folder_path) if os.path.isfile(os.path.join(folder_path, f))]

# 画像が保存されているディレクトリを指定
dataset_dir = "attendance/model_train/dataset"
os.makedirs(dataset_dir+'_cut', exist_ok=True)
file_paths = []

# 再帰的に走査
for root, dirs, files in os.walk(dataset_dir):
    for file in files:
        file_path = os.path.join(root, file)
        file_paths.append(file_path)
print(f'捜査対象のファイル数：{len(file_paths)}')
for id, file_path in enumerate(file_paths):
    img = cv2.imread(file_path)
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5)

    # # 結果を保存
    h_ls = []
    for (x, y, w, h) in faces:
      h_ls.append(h)
    # 顔が検出されない場合は処理を行わない
    if len(h_ls)==0:
        file_path = file_path.replace("dataset", "dataset_cut")
        cv2.imwrite(file_path, img)
        print(f'{id}番目の画像は顔が検出できませんでした')
        continue
    i = np.argmax(h_ls)  
    x, y, w, h = faces[i]    
    face_img = img[y:y+h, x:x+w]
    file_path = file_path.replace("dataset", "dataset_cut")
    os.makedirs(file_path.split("IMG")[0], exist_ok=True)
    print(f'{id}番目の画像から検出した範囲を切り抜き保存しました')
    cv2.imwrite(file_path, face_img)

